// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build riscv64

#include "textflag.h"

// Called by C code generated by cmd/cgo.
// func crosscall2(fn func(a unsafe.Pointer, n int32, ctxt uintptr), a unsafe.Pointer, n int32, ctxt uintptr)
// Saves C callee-saved registers and calls fn with three arguments.
TEXT crosscall2(SB),NOSPLIT|NOFRAME,$0
    ADD	$(-8*17), X2
    MOV	X11, (8*1)(SP)   // void*
    MOV	X12, (8*2)(SP)   // int32
    MOV	X13, (8*3)(SP)   // uintptr
	MOV	X18, (8*4)(SP)
	MOV	X19, (8*5)(SP)
	MOV	X20, (8*6)(SP)
	MOV	X21, (8*7)(SP)
	MOV	X22, (8*8)(SP)
	MOV	X23, (8*9)(SP)
	MOV	X24, (8*10)(SP)
	MOV	X25, (8*11)(SP)
	MOV	X26, (8*12)(SP)
	MOV	X27, (8*13)(SP)
	MOV	X3,  (8*14)(SP)
	MOV	X8,  (8*15)(SP)
	MOV	X1,  (8*16)(SP)

	CALL    runtimeÂ·load_g(SB)
	JALR	X1, X10

    MOV	(8*2)(SP),  X12
    MOV	(8*3)(SP),  X13
	MOV	(8*4)(SP),  X18
	MOV	(8*5)(SP),  X19
	MOV	(8*6)(SP),  X20
	MOV	(8*7)(SP),  X21
	MOV	(8*8)(SP),  X22
	MOV	(8*9)(SP),  X23
	MOV	(8*10)(SP), X24
	MOV	(8*11)(SP), X25
	MOV	(8*12)(SP), X26
	MOV	(8*13)(SP), X27
	MOV	(8*14)(SP), X3
	MOV	(8*15)(SP), X8
	MOV	(8*16)(SP), X1
    ADD	$(8*17), X2
    RET
